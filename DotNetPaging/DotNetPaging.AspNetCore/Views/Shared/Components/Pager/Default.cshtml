@model PagedResultBase
@{
    var urlTemplate = Url.Action(ViewContext.RouteData.Values["action"].ToString(), new { page = "{0}" });
    var request = ViewContext.HttpContext.Request;
    foreach (var key in request.Query.Keys)
    {
        if (key.ToString() == "page")
        {
            continue;
        }

        urlTemplate += "&" + key + "=" + request.Query[key.ToString()];
    }

    var startIndex = Math.Max(Model.CurrentPage - 5, 1);
    var finishIndex = Math.Min(Model.CurrentPage + 5, Model.PageCount);
}

<div class="row">
    <div class="col-md-8 col-sm-8">
        @if (Model.PageCount > 1)
        {
            <ul class="pagination">
                <li class="page-item"><a href="@urlTemplate.Replace("%7B0%7D", "1")" class="page-link">&laquo;</a></li>
                @for (var i = startIndex; i <= finishIndex; i++)
                {
                    if (i == Model.CurrentPage)
                    {

                        <li class="page-item active"><a class="page-link">@i <span class="sr-only">(current)</span></a></li>
                    }
                    else
                    {

                        <li class="page-item"><a href="@urlTemplate.Replace("%7B0%7D", i.ToString())" class="page-link">@i</a></li>
                    }
                }
                <li class="page-item"><a href="@urlTemplate.Replace("%7B0%7D", Model.PageCount.ToString())" class="page-link">&raquo;</a></li>
            </ul>
        }
    </div>
</div>